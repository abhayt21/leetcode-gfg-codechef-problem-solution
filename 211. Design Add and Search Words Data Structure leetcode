class TrieNode{
    TrieNode [] children ;
    boolean isEndOfWord ;
    TrieNode(){
        children = new TrieNode[26] ;
        isEndOfWord = false ;
    }
}

class WordDictionary {
  
   TrieNode root ;
    public WordDictionary() {
        root = new TrieNode ();

    }
    
    public void addWord(String word) {
        TrieNode curr = root ;
        for(char c : word.toCharArray() ){
            if(curr.children[ c - 'a'] == null){
                curr.children[c - 'a'] = new TrieNode();
            }
            curr = curr.children[c - 'a'] ;

        }
         curr.isEndOfWord = true ;
    }
    
    public boolean search(String word) {
       return searchHelper(word , 0 , root ) ; 
       

    }
  private boolean searchHelper(String word , int idx , TrieNode curr) {
      if(idx == word.length() ) {
          return curr.isEndOfWord ;
      }
      if(word.charAt(idx) == '.'){
          for(TrieNode child : curr.children){
              if(child != null && searchHelper(word , idx + 1 , child )){
                  return true ;
              }
          }
              return false  ;
      
      }
        else {
          TrieNode child = curr.children[word.charAt(idx) - 'a'] ;
          if(child == null){
              return false ;
          }
           return searchHelper(word , idx +1 , child) ;
      }
  }
  
  }

